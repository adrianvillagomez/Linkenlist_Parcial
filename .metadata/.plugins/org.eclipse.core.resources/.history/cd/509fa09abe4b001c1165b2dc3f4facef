/*
 * Parser.c
 *
 *  Created on: 20 nov. 2021
 *      Author: adrian
 */

#include <stdio.h>
#include <stdlib.h>
#include "Parser.h"

int parser_arcadeFromText(FILE* pFile,LinkedList* pArrayListArcade)
{
	int rtn =-1;
	Arcade* pArcade;
	char auxId[150];
	char auxNacionalidad[200];
	char auxTipoDeSonido[200];
	char auxCantidadJugadores[200];
	char auxCapacidadMaximaFichas[200];
	char auxNombreDeSalonAlQuePertenece[200];
	char auxNombreDelJuegoQueContiene[200];
	int banderaDelPrimero=1;
	int auxScanf;
	///
	char hauxNacionalidad[63];
	int hauxTipoDeSonido;
	int hauxCantidadJugadores;
	int hauxCapacidadMaximaFichas;
	char hauxNombreDeSalonAlQuePertenece[63];
	char hauxNombreDelJuegoQueContiene[63];
	int hauxId;
	if(pFile!=NULL)
	{
		while(!feof(pFile))
		{
			if(banderaDelPrimero)
			{
				fscanf(pFile,"%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^\n]\n",auxId,auxNacionalidad,auxTipoDeSonido,auxCantidadJugadores,auxCapacidadMaximaFichas,auxNombreDeSalonAlQuePertenece,auxNombreDelJuegoQueContiene);
				banderaDelPrimero=0;
			}
			auxScanf=fscanf(pFile,"%[^,],%[^,],%[^,],%[^,],%[^,],%[^,],%[^\n]\n",auxId,auxNacionalidad,auxTipoDeSonido,auxCantidadJugadores,auxCapacidadMaximaFichas,auxNombreDeSalonAlQuePertenece,auxNombreDelJuegoQueContiene);
			if(auxScanf==7)
			{
				//printf("Lei: %s %s %s %s %s %s %s \n",auxId,auxNacionalidad,auxTipoDeSonido,auxCantidadJugadores,auxCapacidadMaximaFichas,auxNombreDeSalonAlQuePertenece,auxNombreDelJuegoQueContiene);
				pArcade=arcade_newParametros(auxId, auxNacionalidad, auxTipoDeSonido, auxCantidadJugadores, auxCapacidadMaximaFichas, auxNombreDeSalonAlQuePertenece, auxNombreDelJuegoQueContiene);
				//printf("id:%d\n",pArcade->id);
				if(pArcade!=NULL)
				{
				ll_add(pArrayListArcade, pArcade);
				for (int i = 0; i < ll_len(pArrayListArcade); i++)
				{
					printf("entre1\n");
					pArcade= ll_get(pArrayListArcade, i);
					arcade_getNacionalidad(pArcade, hauxNacionalidad);
					arcade_getTipoDeSonido(pArcade, &hauxTipoDeSonido);
					arcade_getCantidadJugadores(pArcade, &hauxCantidadJugadores);
					arcade_getCapacidadMaximaFichas(pArcade, &hauxCapacidadMaximaFichas);
					arcade_getNombreDeSalonAlQuePertenece(pArcade, hauxNombreDeSalonAlQuePertenece);
					arcade_getNombreDelJuegoQueContiene(pArcade, hauxNombreDelJuegoQueContiene);
					arcade_getId(pArcade,&hauxId);
					switch(hauxTipoDeSonido)
					{
					case 1:
					printf("    [%4d] [%10s]             [STEREO]        [%10d]         [%10d]                [%10s]                      [%10s]\n",hauxId,hauxNacionalidad,hauxCantidadJugadores,hauxCapacidadMaximaFichas,hauxNombreDeSalonAlQuePertenece,hauxNombreDelJuegoQueContiene);
					break;
					case 2:
					printf("    [%4d] [%10s]             [MONO]        [%10d]         [%10d]                  [%10s]                        [%10s]\n",hauxId,hauxNacionalidad,hauxCantidadJugadores,hauxCapacidadMaximaFichas,hauxNombreDeSalonAlQuePertenece,hauxNombreDelJuegoQueContiene);
					break;
					}
				}
				rtn=0;
				}
			}
		}
	}
	return rtn;
}
